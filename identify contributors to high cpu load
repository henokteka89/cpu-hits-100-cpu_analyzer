/*
Helps to retrieve the frequently executed queries along with their cpu load (total, average)
Sample execution
--To get the top executed procedures from the last 2 hours, excluding system databases:
EXEC dbo.usp_GetTopExecutedStoredProcs @time_interval = 2, @interval_type = 'hour', @include_system_dbs = 0;
--To get the top executed procedures from the last day, including system databases:
EXEC dbo.usp_GetTopExecutedStoredProcs @time_interval = 1, @interval_type = 'day', @include_system_dbs = 1;

*/


CREATE PROCEDURE dbo.usp_GetTopExecutedStoredProcs
    @time_interval INT,       -- Time interval in either hours or days
    @interval_type NVARCHAR(10) = 'hour', -- Type of interval: 'hour' or 'day'
    @include_system_dbs BIT = 0 -- Option to include system databases: 1 = include, 0 = exclude
AS
BEGIN
    -- Validate interval type
    IF @interval_type NOT IN ('hour', 'day')
    BEGIN
        PRINT 'Invalid interval type. Please specify "hour" or "day".';
        RETURN;
    END

    -- Set the start time based on the specified interval and type
    DECLARE @start_time DATETIME;

    IF @interval_type = 'hour'
        SET @start_time = DATEADD(HOUR, -@time_interval, GETDATE());
    ELSE
        SET @start_time = DATEADD(DAY, -@time_interval, GETDATE());

    -- CTE for procedure statistics, filtered by the time interval
    WITH ProcStats AS (
        SELECT 
            DB_NAME(ps.database_id) AS DatabaseName,
            OBJECT_NAME(ps.object_id, ps.database_id) AS ProcedureName,
            ps.execution_count AS ExecutionCount,
            ps.total_worker_time / 1000 AS [Total CPU Time (ms)],
            ps.total_elapsed_time / 1000 AS [Total Elapsed Time (ms)],
            (ps.total_elapsed_time / ps.execution_count) / 1000 AS [Average Execution Time (ms)],
            ps.total_logical_reads AS [Total Logical Reads],
            ps.total_physical_reads AS [Total Physical Reads],
            ps.total_logical_writes AS [Total Logical Writes],
            ps.last_execution_time AS [Last Execution Time]
        FROM 
            sys.dm_exec_procedure_stats ps
        WHERE 
            ps.last_execution_time >= @start_time -- Filter by the chosen time interval
            AND (@include_system_dbs = 1 OR DB_NAME(ps.database_id) NOT IN ('master', 'msdb', 'model', 'tempdb')) -- Exclude system DBs if requested
    )
    -- Main query to calculate CPU load and other contributions
    SELECT TOP 10
        DatabaseName,
        ProcedureName,
        ExecutionCount,
        [Total CPU Time (ms)],
        [Total Elapsed Time (ms)],
        [Average Execution Time (ms)],
        [Total Logical Reads],
        [Total Physical Reads],
        [Total Logical Writes],
        [Last Execution Time],
        ([Total CPU Time (ms)] * 100.0) / SUM([Total CPU Time (ms)]) OVER() AS [CPU Load Contribution (%)], -- CPU load
        ([Total Elapsed Time (ms)] * 100.0) / SUM([Total Elapsed Time (ms)]) OVER() AS [Elapsed Time Contribution (%)], -- Elapsed time
        ([Total Logical Reads] * 100.0) / SUM([Total Logical Reads]) OVER() AS [Logical Reads Contribution (%)], -- Logical reads
        ([Total Physical Reads] * 100.0) / SUM([Total Physical Reads]) OVER() AS [Physical Reads Contribution (%)]
    FROM 
        ProcStats
    ORDER BY 
        ExecutionCount DESC;
END;
